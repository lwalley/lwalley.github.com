// Custom sass mixins
//
// To use a mixin in this file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;


// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin box-emboss($opacity: 0.2, $opacity2: 0.05) {
  @include box-shadow(rgba(white, $opacity) 0 1px 0, rgba(black, $opacity2) 0 1px 0 inset);
}
@mixin letterpress($opacity: 0.5) {
  @include text-shadow(rgba(white, $opacity) 0 1px 0);
}
@mixin vertical-rule($side, $opacity: 0.2, $opacity2: 0.5) {
  @include apply-side-rhythm-border($side, 1px, 0);
  border-#{$side}-color: rgba(white, $opacity);
  @if $side == left {
    @include single-box-shadow(rgba(black, $opacity2), -1px, 0, 0);
  } @else {
    @include single-box-shadow(rgba(black, $opacity2), 1px, 0, 0);
  }
}

@mixin button($from: #fff, $to: #ddd) {
  overflow: visible;
  color: #394651;
  text-transform: lowercase;
  text-decoration: none;
  @include rhythm-borders(1px, 0.5);
  @include border-radius(3px);
  border-color: $to - #111111;
  @include background-image(linear-gradient(left top, $from, $to));
  cursor: pointer;
  &:hover {
    @include background-image(linear-gradient(left top, saturate($from + #111111, 10%), saturate($to + #111111, 10%)));
  }
  &:active {
    @include background-image(linear-gradient(left top, $from, $to));
  }
}
@mixin input($width: rhythm(10), $from: #ddd, $to: #fff) {
  width: $width;
  @include rhythm-borders(1px, 0.5);
  border-color: $from - #111111;
  @include background-image(linear-gradient($from, $to));
}
@mixin textarea($width: rhythm(10), $from: #ddd, $to:  #fff) {
  width: $width;
  border: 1px solid darken($from, 10%);
  @include background-image(linear-gradient(left top, $from, $to));
}
@mixin adjust-font-size-and-rhythm($adjustment) {
  /* Sets the font-size and line-height while keeping a proper vertical rhythm. */
  @include adjust-font-size-to($adjustment * $base-font-size);
  /* Sets 1 unit of vertical rhythm on the top and bottom margins. */
  @include leader(1, $adjustment * $base-font-size);
  @include trailer(0.5, $adjustment * $base-font-size);
}
/*
 * 1. Corrects text resizing oddly in IE6/7 when body font-size is set using em units
 *    http://clagnut.com/blog/348/#c790
 * 2. Prevents iOS text size adjust after orientation change, without disabling user zoom
 *    www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/
 */
// @see normalize.scss
// @see responsive.scss
@mixin increase-base-font-sizes($increase) {
  html {
    font-size: 100% * ($base-font-size * $increase / 16px); /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
    -ms-text-size-adjust: 100%; /* 2 */
    /* Establishes a vertical rhythm unit using $base-line-height. */
    @include adjust-leading-to($increase);
  }
  /*
   * Addresses font sizes and margins set differently in IE6/7
   * Addresses font sizes within 'section' and 'article' in FF4+, Chrome, S5
   */

  h1 {
    @include adjust-font-size-and-rhythm($increase * 1.8);
  }
  h2 {
    @include adjust-font-size-and-rhythm($increase * 1.5);
  }

  h3 {
    @include adjust-font-size-and-rhythm($increase * 1.17);
  }
  h4, h5, h6 {
    @include adjust-font-size-and-rhythm($increase * 1);
  }
  pre,
  code,
  kbd,
  samp,
  tt,
  var {
    @include adjust-font-size-to( 1 * $increase * $base-font-size );
  }
}
